(claim  Boolean U                       )
(define Boolean (Either Trivial Trivial))

(claim  true    Boolean                 )
(define true    (left   sole           ))

(claim  false   Boolean                 )
(define false   (right          sole   ))

(claim  if (Pi     ([ResultT U]) (->      Boolean   ResultT ResultT   ResultT)))
(define if (lambda ( ResultT   ) (lambda (condition then    else   )
  (ind-Either
    condition
    (lambda (condition) ResultT)
    (lambda (l        ) then   )
    (lambda (r        ) else   )
  )
)))